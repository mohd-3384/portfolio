.about {
  padding-block: 120px;
}

/* ===== Hero (oben) ===== */
.about__hero {
  display: grid;
  /* Links flexibel, rechts fix begrenzt */
  grid-template-columns: minmax(0, 1fr) clamp(260px, 30vw, 400px);
  align-items: end;
  gap: 40px;

  @media (max-width: 992px) {
    grid-template-columns: 1fr;
    align-items: center;
    text-align: center;
  }
}

.about__role {
  letter-spacing: .06em;
  font-weight: 700;
  font-size: clamp(20px, 3.2vw, 54px);
  margin: 0 0 12px 0;
  color: var(--greenColor);
}

.about__name {
  margin: 0;
  line-height: .95;
  color: var(--greenColor);
  display: inline-block;
  font-weight: 700;
  font-size: clamp(36px, 8vw, 74px);
}

/* Bildspalte: max 400px, skaliert sauber mit */
.about__hero-image {
  justify-self: end;
  /* Bild an die rechte Kante */
  width: 100%;
  max-width: 400px;
  /* harte Obergrenze */

  @media (max-width: 992px) {
    justify-self: center;
  }

  img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
    border-radius: 8px;
  }
}

/* ===== Why me (darunter) ===== */
.about__why {
  margin-top: 80px;
  display: grid;
  grid-template-columns: 0.9fr 1.1fr;
  /* links Bild, rechts Text */
  gap: 40px;
  align-items: start;

  @media (max-width: 992px) {
    grid-template-columns: 1fr;
    text-align: center;
  }
}

.about__why-image img {
  width: 100%;
  height: auto;
  border-radius: 8px;
  display: block;
}

/* >>> Right alignment für rechten Block */
.about__why-text {
  justify-self: end;
  /* Block an die rechte Seite drücken */
  text-align: right;
  /* Inhalte rechtsbündig */
  max-width: 560px;
  /* Option: Lesebreite limitieren */

  @media (max-width: 992px) {
    justify-self: center;
    text-align: center;
  }
}

.about__why-title {
  font-size: clamp(26px, 4vw, 40px);
  margin: 0 0 14px 0;
  font-weight: 800;
}

.about__intro {
  margin: 0 0 24px 0;
  line-height: 1.6;
  font-size: 1.05rem;
  color: var(--greenColor);
}

/* Icons-Zeile: rechtsbündig */
.about__facts {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
  gap: 24px;
  list-style: none;
  padding: 0;
  margin: 0 0 28px 0;

  .iam {
    font-size: clamp(28px, 3.4vw, 40px);
    font-weight: 800;
    color: var(--redColor);
    margin-inline-end: 12px;
  }

  .fact-item {
    display: inline-flex;
    align-items: center;
    gap: 10px;
  }

  .fact-item img {
    width: 28px;
    height: 28px;
  }

  .fact-item span {
    font-weight: 600;
    color: var(--greenColor);
  }

  .fact-item.remote {
    margin-top: 36px;
  }

  /* Pfeile kleiner + hinter den Text legen */
  .arrow {
    position: absolute;
    pointer-events: none;
    user-select: none;
    z-index: 0;
    /* hinter die Facts */
    opacity: .95;
  }

  /* Pfeil unter "located in Wuppertal" -> zum Remote-Item */
  .arrow-to-remote {
    width: clamp(16px, 2.6vw, 30px);
    /* ↓ kleiner */
    right: 40%;
    /* Position feinjustieren */
    top: 44%;
    transform: translateY(-8%) rotate(-8deg);
  }

  /* Pfeil vom Remote-Item -> Button */
  .arrow-to-button {
    width: clamp(18px, 2.6vw, 30px);
    /* ↓ kleiner */
    right: 12%;
    top: 106%;
    transform: rotate(10deg);
  }

  @media (max-width: 700px) {
    justify-content: center;

    .arrow-to-remote {
      right: 56%;
      top: 58%;
      transform: translate(40%, -10%) rotate(-6deg);
    }

    .arrow-to-button {
      right: 18%;
      top: 72%;
      transform: rotate(8deg);
    }
  }
}

.talk {
  margin-top: 44px !important;
  margin-right: 56px !important;
}

/* ===== Buttons (nutzt deine Farben/Variablen) ===== */
.btn {
  display: inline-block;
  padding: 12px 20px;
  border-radius: 6px;
  text-decoration: none;
  font-weight: 700;
  transition: background var(--transition125), color var(--transition125), border var(--transition125);
}

.btn-primary {
  background: var(--greenColor);
  color: #000;

  &:hover {
    background: var(--redColor);
    color: #fff;
  }
}

.btn-outline {
  border: 1.5px solid var(--greenColor);
  color: var(--greenColor);
  background: transparent;

  &:hover {
    border-color: var(--redColor);
    color: var(--redColor);
  }
}

/* border entfernen */
.btn.border-none {
  border: none !important;
}
